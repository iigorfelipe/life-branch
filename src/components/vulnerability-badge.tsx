export type StatusCode =
  | "EX"
  | "EW"
  | "CR"
  | "EN"
  | "VU"
  | "NT"
  | "LC"
  | "DD"
  | "NE";

const STATUS_INFO: Record<
  StatusCode,
  { label: string; bg: string; text?: string }
> = {
  EX: { label: "Extinto", bg: "bg-gray-800" },
  EW: { label: "Extinto na natureza", bg: "bg-gray-600" },
  CR: { label: "Criticamente em perigo", bg: "bg-red-700" },
  EN: { label: "Em perigo", bg: "bg-orange-600" },
  VU: { label: "Vulnerável", bg: "bg-yellow-500", text: "text-black" },
  NT: { label: "Quase ameaçado", bg: "bg-lime-500", text: "text-black" },
  LC: { label: "Pouco preocupante", bg: "bg-green-500" },
  DD: { label: "Dados insuficientes", bg: "bg-blue-400" },
  NE: { label: "Não avaliado", bg: "bg-neutral-400" },
};

interface VulnerabilityBadgeProps {
  statusCode?: StatusCode | null;
}

export const VulnerabilityBadge = ({ statusCode }: VulnerabilityBadgeProps) => {
  if (!statusCode || !(statusCode in STATUS_INFO)) {
    return (
      <div className="inline-block w-full rounded bg-neutral-500 p-2">
        <span className="text-xs font-semibold text-white">
          Status desconhecido
        </span>
      </div>
    );
  }

  const { label, bg, text } = STATUS_INFO[statusCode];

  return (
    <div className={`${bg} inline-block w-full rounded p-2`}>
      <span className={`text-xs font-semibold ${text || "text-white"}`}>
        {label}
      </span>
    </div>
  );
};
